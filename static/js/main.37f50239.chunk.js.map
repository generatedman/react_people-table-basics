{"version":3,"sources":["api.ts","components/Loader/Loader.tsx","PersonLink.tsx","PeoplePage.tsx","App.tsx","index.tsx"],"names":["getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","className","findParent","person","parentType","name","peopleList","parent","find","personToFind","classNames","to","slug","motherName","fatherName","PersonLink","people","useParams","sex","born","died","PeoplePage","useState","setPeople","isLoading","setIsLoading","error","setError","useEffect","loadPeople","map","App","role","isActive","path","element","replace","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.37f50239.chunk.js","sourcesContent":["import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useParams, Link } from 'react-router-dom';\nimport { Person } from './types';\n\nconst findParent = (\n  person: Person,\n  parentType: string,\n  name: string,\n  peopleList: Person[],\n) => {\n  const parent = peopleList\n    .find(personToFind => personToFind.name === name);\n\n  if (parent) {\n    return (\n      <Link\n        className={classNames(\n          { 'has-text-danger': parentType === 'mother' },\n        )}\n        to={`/people/${parent.slug}`}\n      >\n        {parentType === 'mother'\n          ? person.motherName\n          : person.fatherName}\n      </Link>\n    );\n  }\n\n  return `${name}`;\n};\n\ninterface Props {\n  person: Person,\n  people: Person[],\n}\n\nexport const PersonLink: React.FC<Props> = ({ person, people }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning':\n          person.slug === slug,\n      })}\n    >\n      <td>\n        <Link\n          className={classNames(\n            { 'has-text-danger': person.sex === 'f' },\n          )}\n          to={`/people/${person.slug}`}\n        >\n          {person.name}\n        </Link>\n      </td>\n\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.motherName\n          ? (\n            findParent(person, 'mother', person.motherName, people)\n          )\n          : ('-')}\n      </td>\n      <td>\n        {person.fatherName\n          ? (\n            findParent(person, 'father', person.fatherName, people)\n          )\n          : ('-')}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from './api';\nimport { Person } from './types';\nimport { Loader } from './components/Loader';\nimport { PersonLink } from './PersonLink';\n\nexport const PeoplePage: React.FC<{}> = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    const loadPeople = async () => {\n      try {\n        setPeople(await getPeople());\n      } catch (err) {\n        setError(true);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    loadPeople();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n      {isLoading && <Loader />}\n\n      {error\n        && (\n          <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n            Something went wrong\n          </p>\n        )}\n\n      {(!error && !isLoading)\n        && (\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(person => (\n                <PersonLink person={person} people={people} />\n              ))}\n            </tbody>\n          </table>\n        )}\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport {\n  Routes,\n  Route,\n  NavLink,\n  Navigate\n} from 'react-router-dom';\nimport { PeoplePage } from './PeoplePage';\n\n\nimport './App.scss';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <nav\n      data-cy=\"nav\"\n      className=\"navbar is-fixed-top has-shadow\"\n      role=\"navigation\"\n      aria-label=\"main navigation\"\n    >\n      <div className=\"container\">\n        <div className=\"navbar-brand\">\n          <NavLink\n            className={\n              ({ isActive }) =>\n                classNames('navbar-item',\n                  { 'has-background-grey-lighter': isActive }\n                )\n            }\n            to=\"/\"\n          >\n            Home\n          </NavLink>\n\n          <NavLink\n            className={\n              ({ isActive }) => classNames('navbar-item', { 'has-background-grey-lighter': isActive })\n            } to=\"/people\"\n          >\n            People\n          </NavLink>\n        </div>\n      </div>\n    </nav >\n\n    <main className=\"section\">\n      <div className=\"container\">\n\n        <Routes>\n          <Route path=\"/\" element={<h1 className='title'>Home page</h1>} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n          <Route path=\"/people\" element={\n            <PeoplePage />\n          } />\n          <Route path=\"/people/:slug\" element={\n            <PeoplePage />\n          } />\n\n          <Route path=\"*\" element={\n            <h1 className=\"title\">Page not found</h1>\n          } />\n        </Routes>\n      </div>\n    </main>\n  </div >\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}